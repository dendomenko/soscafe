name: Build_And_Deploy_Production_Environment

on:
  push:
    branches:
    - master

env:
  AZURE_RESOURCE_GROUP_NAME: SosCafe
  AZURE_FUNCTIONAPP_NAME: soscafevendor
  FRONT_END_AZURE_STORAGE_NAME: soscafevendorui
  FRONT_END_AZURE_CDN_PROFILE_NAME: SosCafe
  FRONT_END_AZURE_CDN_ENDPOINT_NAME: soscafevendor
  DOTNET_VERSION: '3.1.201'
  NODE_VERSION: '10.x'

jobs:
  build-api:
    runs-on: windows-latest
    steps:
    - name: Check out
      uses: actions/checkout@master

    - name: Set up .NET Core v${{ env.DOTNET_VERSION }} environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Run dotnet build'
      shell: pwsh
      run: |
        pushd './src/api'
        dotnet build --configuration Release --output ./output
        popd
    
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: api
        path: src/api/output


  build-front-end:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out
      uses: actions/checkout@master
    
    - name: Install Node v${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Run npm install and build
      run: |
        cd src/frontend
        npm install
        npm run build:prod

    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: frontend
        path: src/frontend/dist/soscafe-vendor-app

  deploy:
    runs-on: ubuntu-latest
    needs: [ build-api, build-front-end ]

    steps:
    - name: Download API
      uses: actions/download-artifact@v1
      with:
        name: api

    - name: Download front-end build
      uses: actions/download-artifact@v1
      with:
        name: frontend

    - name: Log into Azure via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Publish API to function app ${{ env.AZURE_FUNCTIONAPP_NAME }}
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: api

    - name: Deploy front-end to storage account
      run: |
        az storage blob upload-batch --auth-mode key --account-name ${{ env.FRONT_END_AZURE_STORAGE_NAME }} --destination \$web --source frontend

    - name: Purge front-end CDN
      run: |
        az cdn endpoint purge -g ${{ env:AZURE_RESOURCE_GROUP_NAME }} -n ${{ env:FRONT_END_AZURE_CDN_ENDPOINT_NAME }} --profile-name ${{ env:FRONT_END_AZURE_CDN_PROFILE_NAME }} --content-paths '/*'